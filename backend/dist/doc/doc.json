{
    "openapi": "3.0.0",
    "info": {
        "title": "Authentication API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://dijura.vercel.app/api/v1"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate a user",
                "description": "This endpoint allows users to log in and obtain authentication tokens.\n",
                "requestBody": {
                    "description": "User credentials for authentication",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 50,
                                        "description": "The username of the user (optional if email is provided)",
                                        "example": "johndoe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "description": "The email address of the user (optional if userName is provided)",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "maxLength": 100,
                                        "description": "The user's password",
                                        "example": "mysecretpassword"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "ADMIN",
                                            "USER"
                                        ],
                                        "description": "The user's role",
                                        "example": "USER"
                                    }
                                },
                                "required": [
                                    "password",
                                    "role"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Set cookies for authentication",
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth_token": {
                                            "type": "string",
                                            "example": "auth_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; Path=/; HttpOnly; SameSite=Strict",
                                            "description": "Authentication token cookie",
                                            "format": "cookie"
                                        },
                                        "refresh_token": {
                                            "type": "string",
                                            "example": "refresh_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; Path=/; HttpOnly; SameSite=Strict",
                                            "description": "Refresh token cookie",
                                            "format": "cookie"
                                        }
                                    }
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "sucess": {
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "asit biswas",
                                            "description": "name"
                                        },
                                        "username": {
                                            "type": "string",
                                            "example": "asit123",
                                            "description": "username"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "example@example.com.",
                                            "description": "email adddress."
                                        },
                                        "phone": {
                                            "type": "integer",
                                            "example": 1234567890,
                                            "description": "phone number."
                                        },
                                        "id": {
                                            "type": "string",
                                            "example": "5f7d117b5a8f25a8a69f15a2",
                                            "description": "user id"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "USER_NOT_FOUND_ERROR",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user was not found. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "INTERNAL_SERVER_ERROR",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign up a new user",
                "description": "This endpoint allows users to sign up and create a new account.\n",
                "requestBody": {
                    "description": "User information for registration",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100
                                    },
                                    "phone": {
                                        "type": "integer",
                                        "format": "int"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "ADMIN",
                                            "USER"
                                        ]
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "maxLength": 100
                                    },
                                    "username": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 50
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "required": [
                                    "name",
                                    "phone",
                                    "role",
                                    "password",
                                    "username",
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "sucess": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "username_already_exists",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The username already exists. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log out a user",
                "description": "This endpoint allows users to log out by invalidating the refresh token.\n",
                "responses": {
                    "200": {
                        "description": "User successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "sucess": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged Out."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "authorization_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh authentication token",
                "description": "This endpoint allows users to refresh their authentication token using a valid refresh token.\n",
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token successfully refreshed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "sucess": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        "headers": {
                            "Set-Cookie": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth_token": {
                                            "type": "string",
                                            "example": "auth_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; Path=/; HttpOnly; SameSite=Strict",
                                            "description": "Authentication token cookie",
                                            "format": "cookie"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "NOT_FOUND",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The requested resource was not found.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/all": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users (admin only)",
                "description": "This endpoint allows admins to retrieve information about all users.\n",
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of all users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "sucess": {
                                            "type": "boolean"
                                        },
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "email": {
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "phone": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "email",
                                                    "username",
                                                    "id",
                                                    "phone"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "authorization_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "user_not_found_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user was not found. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user details",
                "description": "This endpoint allows users to retrieve their own details.\n",
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "sucess": {
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "phone": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "email",
                                        "username",
                                        "id",
                                        "phone"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "authorization_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "not_found",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The requested resource was not found.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/book/all": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Get all books",
                "description": "This endpoint allows users to retrieve information about all books.\n",
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of all books",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "sucess": {
                                            "type": "boolean"
                                        },
                                        "books": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "author": {
                                                        "type": "string"
                                                    },
                                                    "available": {
                                                        "type": "boolean"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "imageUrl": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "example": "https://storage.googleapis.com/quora-clone-asit.appspot.com/97d91dda-a435-447e-8c4d-6326a681ceef.jpg"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "author",
                                                    "available",
                                                    "id"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "authorization_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "not_found",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The requested resource was not found.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/book": {
            "post": {
                "tags": [
                    "Book"
                ],
                "summary": "Update a book (admin only)",
                "description": "This endpoint allows admins to update information about a book.\n",
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Book information to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sucess": {
                                        "type": "boolean"
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100
                                    },
                                    "imageUrl": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://storage.googleapis.com/quora-clone-asit.appspot.com/97d91dda-a435-447e-8c4d-6326a681ceef.jpg"
                                    },
                                    "author": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100
                                    },
                                    "available": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "name",
                                    "author",
                                    "available"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful update of the book",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "author": {
                                            "type": "string"
                                        },
                                        "available": {
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "imageUrl": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "invalid_fields",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The request contains invalid fields. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "authorization_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/book/{id}": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Get book by ID",
                "description": "This endpoint allows users to retrieve information about a specific book by its ID.\n",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the book to retrieve"
                    }
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of the book by ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "sucess": {
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "author": {
                                            "type": "string"
                                        },
                                        "available": {
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "imageUrl": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://storage.googleapis.com/quora-clone-asit.appspot.com/97d91dda-a435-447e-8c4d-6326a681ceef.jpg"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "author",
                                        "available",
                                        "id"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "invalid_id",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The request id is not valid.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "authorization_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "not_found",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The requested resource was not found.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Book"
                ],
                "summary": "Partially update a book (admin only)",
                "description": "This endpoint allows admins to partially update information about a book.\n",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the book to update"
                    }
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Book information to partially update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "author": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "available": {
                                        "type": "boolean",
                                        "nullable": true
                                    }
                                },
                                "anyOf": [
                                    {
                                        "required": [
                                            "name"
                                        ]
                                    },
                                    {
                                        "required": [
                                            "author"
                                        ]
                                    },
                                    {
                                        "required": [
                                            "available"
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful partial update of the book"
                    },
                    "400": {
                        "description": "Invalid ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "invalid_id",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The request id is not valid.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "authorization_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Book"
                ],
                "summary": "Delete a book (admin only)",
                "description": "This endpoint allows admins to delete a book by its ID.\n",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the book to delete"
                    }
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful deletion of the book"
                    },
                    "400": {
                        "description": "Invalid ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "invalid_id",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The request id is not valid.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "authorization_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/book/{id}/upload": {
            "patch": {
                "tags": [
                    "Book"
                ],
                "summary": "Upload image for a book",
                "description": "Upload an image for a book by its ID.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the book to upload an image for"
                    }
                ],
                "requestBody": {
                    "description": "Image upload for the book",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Image successfully uploaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "AUTHORIZATION_ERROR"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "NOT_FOUND"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The requested resource was not found."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 415
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "UNSUPPORTED_MEDIA"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Only JPG / PNG images are allowed"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transaction": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get list of transactions of user.",
                "description": "This endpoint allows users to retrieve a list of transactions.\n",
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "transactions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "user": {
                                                        "type": "string"
                                                    },
                                                    "book": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "dueDate": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "transactionType": {
                                                        "type": "string",
                                                        "enum": [
                                                            "BORROWED",
                                                            "RETURNED"
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "user",
                                                    "book",
                                                    "id",
                                                    "dueDate",
                                                    "transactionType"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "invalid_id",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The request id is not valid.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "authorization_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "not_found",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The requested resource was not found.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Create a new transaction (admin only)",
                "description": "This endpoint allows admins to create a new transaction.\n",
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Transaction information to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "success": {
                                        "type": "boolean"
                                    },
                                    "book": {
                                        "type": "string"
                                    },
                                    "user": {
                                        "type": "string"
                                    },
                                    "dueDate": {
                                        "type": "string",
                                        "format": "date",
                                        "nullable": true
                                    },
                                    "transactionType": {
                                        "type": "string",
                                        "enum": [
                                            "BORROWED",
                                            "RETURNED"
                                        ]
                                    }
                                },
                                "required": [
                                    "book",
                                    "user",
                                    "transactionType"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful creation of a new transaction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "string"
                                        },
                                        "book": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "dueDate": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "transactionType": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "invalid_fields",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The request contains invalid fields. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "authorization_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transaction/all": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get all transactions (admin only)",
                "description": "This endpoint allows admins to retrieve all transactions.\n",
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of all transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "user": {
                                                        "type": "string"
                                                    },
                                                    "book": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "dueDate": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "transactionType": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "user",
                                                    "book",
                                                    "id",
                                                    "dueDate",
                                                    "transactionType"
                                                ]
                                            }
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "authorization_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "not_found",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The requested resource was not found.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transaction/borrowed": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get all borrowed books transactions (admin only)",
                "description": "This endpoint allows admins to retrieve all borrowed books transactions.\n",
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of all transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "user": {
                                                        "type": "string"
                                                    },
                                                    "book": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "dueDate": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "transactionType": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "user",
                                                    "book",
                                                    "id",
                                                    "dueDate",
                                                    "transactionType"
                                                ]
                                            }
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "authorization_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "not_found",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The requested resource was not found.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transaction/returned": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get all returned books transactions (admin only)",
                "description": "This endpoint allows admins to retrieve all returned books transactions.\n",
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of all transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "user": {
                                                        "type": "string"
                                                    },
                                                    "book": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "dueDate": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "transactionType": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "user",
                                                    "book",
                                                    "id",
                                                    "dueDate",
                                                    "transactionType"
                                                ]
                                            }
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "authorization_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "not_found",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The requested resource was not found.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transaction/{id}": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get a transaction by ID (admin only)",
                "description": "This endpoint allows admins to retrieve a transaction by its ID.\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the transaction to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of the transaction by ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "string"
                                        },
                                        "book": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "dueDate": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "transactionType": {
                                            "type": "string"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "invalid_id",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The request id is not valid.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "authorization_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "not_found",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The requested resource was not found.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Update a transaction by ID (admin only)",
                "description": "This endpoint allows admins to update a transaction by its ID.\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the transaction to update",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Transaction information to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "transactionType": {
                                        "type": "string",
                                        "enum": [
                                            "BORROWED",
                                            "RETURNED"
                                        ]
                                    }
                                },
                                "required": [
                                    "transactionType"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful update of the transaction by ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "invalid_fields",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The request contains invalid fields. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "authorization_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user is not authorized to perform this action.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "not_found",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The requested resource was not found.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500,
                                            "description": "HTTP status code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "internal_server_error",
                                            "description": "Error title"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error while processing your request. Please try again later.",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "cookieRefresh": {
                "type": "apiKey",
                "in": "cookie",
                "name": "refresh_token"
            },
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "auth_token"
            }
        }
    },
    "security": [
        {
            "cookieAuth": []
        },
        {
            "cookieRefresh": []
        }
    ]
}
